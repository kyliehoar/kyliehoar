<<Kylie Hoar>>
HW1
Written Questions

Question 1. Stack Experiments
------------------------------

1.1 - 1.25

1.2 - see code.

1.3 - 9.0

1.4 a. 0.6, b. a - Object[100] (id=26) ; value [0] * and [1] /, N = 1, c. a - Object[100] (id=27) ; value [0] 2.0 and [1] 0.6 and [2] 5.0, N = 1
	   Essentially, there is 1 item in ops and 1 item in vals.

1.5 a. 7.0, b. a - Object[100] (id=26) ; value [0] + and [1] +, N = 1, c. a - Object[100] (id=28) ; value [0] 7.0 and [1] 1.0, N = 0
	   Essentially, there is 1 item in ops and no items in vals.

1.6 a. 34.0, b. a - Object[100] (id=28) ; value [0] -, N = 1, c. a - Object[100] (id=26) ; value [0] 34.0, N = 0
	   Essentially, there is 1 item in ops and no items in vals.

1.7 a. 9.0, b. Object[100] (id=29) ; value [0] + and [1] +, N = 2, c. Object[100] (id=28) ; value [0] 4.0 and [1] 5.0 and [2] 8.0 and [3] 9.0, N = 3
	   Essentially, there are 2 items in ops and 3 items in vals.

------------------------------------------------
Bonus Questions
------------------------------------------------

If you do any bonus questions that need written answers, do so here.

Question 2. Searching Programming Exercises
-------------------------------------------

2.1 118,502,625 total inspections.

2.2 55,127,151 total inspections.

------------------------------------------------
Bonus Questions
------------------------------------------------

If you do any bonus questions that need written answers, do so here.

Question 3. Stack Programming
-----------------------------

3.1 see code.

3.2 see code.

------------------------------------------------
Bonus Questions
------------------------------------------------

If you do any bonus questions that need written answers, do so here.

Question 4. Staque Implementation
---------------------------------

4 see code.

------------------------------------------------
Bonus Questions
------------------------------------------------

If you do any bonus questions that need written answers, do so here.

Question 5. Big O Notation
--------------------------

5a. Formula for #SM Mult = 7^(log2(N/2))
5b. Formula for #SM Add/Sub =  Although I am unsure of the specific formula for this questions, I have deduced some possibilities of what 
							   the formula could be.
							   I believe that this relationship with N is an exponential function a^x where a is some number or expression 
							   and x is what power a is raised to through the manipulation of the value N.
							   To help find this mathematical relationship/formula, I found these patterns between SM Add/Sum and N within 
							   the first few values of the data:
							   	1. All values in SM Add/Sub are divisible by 36.
							   	2. Every other value in SM Add/Sub starting with the first row N = 4 is divisible by 11.
------------------------------------------------
Bonus Questions
------------------------------------------------

If you do any bonus questions that need written answers, do so here.